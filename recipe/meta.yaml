{% set name = "libnvjitlink" %}
{% set version = "12.8.93" %}
{% set cuda_version = "12.8" %}
{% set platform = "placeholder" %}  # [osx]
{% set platform = "linux-x86_64" %}  # [linux64]
{% set platform = "linux-ppc64le" %}  # [ppc64le]
{% set platform = "linux-sbsa" %}  # [aarch64]
{% set platform = "windows-x86_64" %}  # [win]
{% set target_name = "x86_64-linux" %}  # [linux64]
{% set target_name = "ppc64le-linux" %}  # [ppc64le]
{% set target_name = "sbsa-linux" %}  # [aarch64]
{% set target_name = "x64" %}  # [win]
{% set extension = "tar.xz" %}  # [not win]
{% set extension = "zip" %}  # [win]

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://developer.download.nvidia.com/compute/cuda/redist/{{ name }}/{{ platform }}/{{ name }}-{{ platform }}-{{ version }}-archive.{{ extension }}
  sha256: 29220664ad272c513d3213133ace6d6590303e46b42a17b05bc2bee90e54a888  # [linux64]
  sha256: d5be4fc9b26e07a687249f8a5151fa093f512f1c50a629d52e659ee9ce984aca  # [aarch64]
  sha256: 5680b0a42ddf20f11705ca9c365d002f032ab876d3fe44382eeba633b558ccc0  # [win]

build:
  number: 0
  binary_relocation: false
  skip: true  # [osx or ppc64le]

test:
  requires:
    - patchelf  # [linux]
  files:
    - test-rpath.sh
  commands:
    - test -L $PREFIX/lib/libnvJitLink.so.{{ version.split(".")[0] }}                            # [linux]
    - test -L $PREFIX/lib/libnvJitLink.so.{{ version }}                                          # [linux]
    - test -L $PREFIX/targets/{{ target_name }}/lib/libnvJitLink.so.{{ version.split(".")[0] }}  # [linux]
    - test -f $PREFIX/targets/{{ target_name }}/lib/libnvJitLink.so.{{ version }}                # [linux]
    - bash test-rpath.sh                                                                         # [linux]
    - if not exist %LIBRARY_BIN%\nvJitLink*.dll exit 1                                           # [win]

outputs:
  - name: libnvjitlink
    files:
      - lib/libnvJitLink.so.*                            # [linux]
      - targets/{{ target_name }}/lib/libnvJitLink.so.*  # [linux]
      - Library\bin\nvJitLink*.dll                       # [win]
    requirements:
      build:
        - {{ compiler("c") }}
        - {{ compiler("cxx") }}
        - arm-variant * {{ arm_variant_type }}  # [aarch64]
        - {{ stdlib("c") }}
        - patchelf <0.18.0                      # [linux]
      host:
        - cuda-version {{ cuda_version }}
      run:
        # xref: conda-forge/libnvjitlink-feedstock#15
        # we want to allow ex: libnvjitlink=12.6 installed in a cuda-version=12.3 environment,
        # both within the same CUDA major.
        - {{ pin_compatible("cuda-version", min_pin="x", max_pin="x.x") }}
      run_constrained:
        - arm-variant * {{ arm_variant_type }}  # [aarch64]
    # Tests are defined at the top level, due to package/output name conflicts.
    about:
      home: https://developer.nvidia.com/cuda-toolkit
      license_file: LICENSE
      license: LicenseRef-NVIDIA-End-User-License-Agreement
      license_url: https://docs.nvidia.com/cuda/eula/index.html
      summary: CUDA nvJitLink library
      description: |
        nvJitLink - Just-in-Time Link Time Optimization (JIT LTO)
      doc_url: https://docs.nvidia.com/cuda/nvjitlink/

  - name: libnvjitlink-dev
    build:
      run_exports:
        - {{ pin_subpackage("libnvjitlink", max_pin="x") }}
    files:
      - lib/libnvJitLink*.so                            # [linux]
      - lib/pkgconfig                                   # [linux]
      - targets/{{ target_name }}/include/nvJitLink.h   # [linux]
      - targets/{{ target_name }}/lib/libnvJitLink*.so  # [linux]
      #- targets/{{ target_name }}/lib/stubs             # [linux]  # bug: currently missing
      - Library\include                                 # [win]
      - Library\lib\nvJitLink.lib                       # [win]
    requirements:
      build:
        - {{ compiler("c") }}
        - {{ compiler("cxx") }}
        - arm-variant * {{ arm_variant_type }}  # [aarch64]
        - {{ stdlib("c") }}
      host:
        - cuda-version {{ cuda_version }}
      run:
        - {{ pin_compatible("cuda-version", max_pin="x.x") }}
        - {{ pin_subpackage("libnvjitlink", exact=True) }}
      run_constrained:
        - arm-variant * {{ arm_variant_type }}  # [aarch64]
        - libnvjitlink-static >={{ version }}
    test:
      commands:
        - test -L $PREFIX/lib/libnvJitLink.so                            # [linux]
        - test -f $PREFIX/lib/pkgconfig/nvjitlink*.pc                    # [linux]
        - test -f $PREFIX/targets/{{ target_name }}/include/nvJitLink.h  # [linux]
        - test -L $PREFIX/targets/{{ target_name }}/lib/libnvJitLink.so  # [linux]
        - if not exist %LIBRARY_INC%\nvJitLink.h exit 1                  # [win]
        - if not exist %LIBRARY_LIB%\nvJitLink.lib exit 1                # [win]
    about:
      home: https://developer.nvidia.com/cuda-toolkit
      license_file: LICENSE
      license: LicenseRef-NVIDIA-End-User-License-Agreement
      license_url: https://docs.nvidia.com/cuda/eula/index.html
      summary: CUDA nvJitLink library
      description: |
        nvJitLink - Just-in-Time Link Time Optimization (JIT LTO)
      doc_url: https://docs.nvidia.com/cuda/nvjitlink/index.html

  - name: libnvjitlink-static
    files:
      - targets/{{ target_name }}/lib/libnvJitLink*_static.a  # [linux]
      - Library\lib\nvJitLink_static.lib                      # [win]
    requirements:
      build:
        - {{ compiler("c") }}
        - {{ compiler("cxx") }}
        - arm-variant * {{ arm_variant_type }}  # [aarch64]
        - {{ stdlib("c") }}
      host:
        - cuda-version {{ cuda_version }}
      run:
        - {{ pin_compatible("cuda-version", max_pin="x.x") }}
      run_constrained:
        - arm-variant * {{ arm_variant_type }}  # [aarch64]
    test:
      commands:
        - test -f $PREFIX/targets/{{ target_name }}/lib/libnvJitLink_static.a  # [linux]
        - if not exist %LIBRARY_LIB%\nvJitLink_static.lib exit 1               # [win]
    about:
      home: https://developer.nvidia.com/cuda-toolkit
      license_file: LICENSE
      license: LicenseRef-NVIDIA-End-User-License-Agreement
      license_url: https://docs.nvidia.com/cuda/eula/index.html
      summary: CUDA nvJitLink library
      description: |
        nvJitLink - Just-in-Time Link Time Optimization (JIT LTO)
      doc_url: https://docs.nvidia.com/cuda/nvjitlink/index.html

about:
  home: https://developer.nvidia.com/cuda-toolkit
  license_file: LICENSE
  license: LicenseRef-NVIDIA-End-User-License-Agreement
  license_url: https://docs.nvidia.com/cuda/eula/index.html
  summary: CUDA nvJitLink library
  description: |
    nvJitLink - Just-in-Time Link Time Optimization (JIT LTO)
  doc_url: https://docs.nvidia.com/cuda/nvjitlink/index.html

extra:
  recipe-maintainers:
    - conda-forge/cuda
